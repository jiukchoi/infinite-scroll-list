{"version":3,"sources":["components/infinite-scroll-list/InfiniteScrollList.styles.js","components/infinite-scroll-list/InfiniteScrollList.presenter.js","components/infinite-scroll-list/InfiniteScrollList.container.js","routes/index.js","commons/GlobalStyles.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","ItemWrapper","Item","span","ItemValue","CommentWrapper","Comment","CommentValue","InfiniteScrollListUI","item","map","v","i","id","email","body","InfiniteScrollList","state","itemPage","getItem","a","axios","get","data","setState","prev","infiniteScroll","window","innerHeight","scrollY","document","documentElement","scrollHeight","this","addEventListener","_","prevState","Component","Router","path","exact","component","reset","css","App","styles","ReactDOM","render","getElementById"],"mappings":"ySAEaA,EAAUC,IAAOC,IAAV,mJAOPC,EAAYF,IAAOC,IAAV,8LAQTE,EAAcH,IAAOC,IAAV,sEAIXG,EAAOJ,IAAOK,KAAV,gHAMJC,EAAYN,IAAOK,KAAV,mEAITE,EAAiBP,IAAOC,IAAV,yEAIdO,EAAUR,IAAOK,KAAV,uIAOPI,EAAeT,IAAOK,KAAV,mE,OCjBVK,EAvBc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9B,OACE,cAACZ,EAAD,UACGY,EAAKC,KAAI,SAACC,EAAGC,GAAJ,OACR,eAACZ,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,yBACA,cAACE,EAAD,UAAYO,EAAEE,QAEhB,eAACZ,EAAD,WACE,cAACC,EAAD,oBACA,cAACE,EAAD,UAAYO,EAAEG,WAEhB,eAACT,EAAD,WACE,cAACC,EAAD,sBACA,cAACC,EAAD,UAAeI,EAAEI,YAXLH,SCoCTI,E,4MArCbC,MAAQ,CACNR,KAAM,GACNS,SAAU,G,EAGZC,Q,sBAAU,8BAAAC,EAAA,sEACeC,IAAMC,IAAN,8DAAiE,EAAKL,MAAMC,SAA5E,eADf,gBACAK,EADA,EACAA,KAER,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBhB,KAAK,GAAD,mBAAMgB,EAAKhB,MAAX,YAAoBc,QAJlB,2C,EAQVG,eAAiB,WACXC,OAAOC,YAAcD,OAAOE,UAAYC,SAASC,gBAAgBC,cACnE,EAAKR,SAAS,CACZN,SAAU,EAAKD,MAAMC,SAAW,K,uDAKtC,WACEe,KAAKd,UACLQ,OAAOO,iBAAiB,SAAUD,KAAKP,kB,gCAGzC,SAAmBS,EAAGC,GAChBH,KAAKhB,MAAMC,WAAakB,EAAUlB,UACpCe,KAAKd,Y,oBAIT,WACE,OAAO,cAAC,EAAD,CAAsBV,KAAMwB,KAAKhB,MAAMR,W,GAlCjB4B,aCOlBC,EARA,WACb,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,O,QCJjC0B,EAAQC,YAAH,yKCWHC,MATf,WACE,OACE,qCACE,cAAC,IAAD,CAAQC,OAAQH,IAChB,cAAC,EAAD,QCJNI,IAASC,OACP,cAAC,EAAD,IACAjB,SAASkB,eAAe,W","file":"static/js/main.ad32bd22.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 33px;\n`;\nexport const Container = styled.div`\n  width: 500px;\n  background-color: #F8F9FA;\n  border: 0.5px solid rgba(206, 212, 218, 0.5);\n  border-radius: 20px;\n  padding: 20px;\n  margin-bottom: 12px;\n`;\nexport const ItemWrapper = styled.div`\n  display: flex;\n  margin-bottom: 12px;\n`;\nexport const Item = styled.span`\n  font-size: 18px;\n  font-weight: bold;\n  color: #212529;\n  margin-right: 12px;\n`;\nexport const ItemValue = styled.span`\n  font-size: 18px;\n  color: #212529;\n`;\nexport const CommentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Comment = styled.span`\n  font-size: 18px;\n  font-weight: bold;\n  color: #212529;\n  margin-right: 12px;\n  margin-bottom: 2px;\n`;\nexport const CommentValue = styled.span`\n  font-size: 18px;\n  color: #212529;\n`;\n","import { Wrapper, Container, Item, ItemValue, ItemWrapper, CommentWrapper, CommentValue, Comment } from './InfiniteScrollList.styles';\n\nconst InfiniteScrollListUI = ({ item }) => {\n  return (\n    <Wrapper>\n      {item.map((v, i) => (\n        <Container key={i}>\n          <ItemWrapper>\n            <Item>Comment Id</Item>\n            <ItemValue>{v.id}</ItemValue>\n          </ItemWrapper>\n          <ItemWrapper>\n            <Item>Email</Item>\n            <ItemValue>{v.email}</ItemValue>\n          </ItemWrapper>\n          <CommentWrapper>\n            <Comment>Comment</Comment>\n            <CommentValue>{v.body}</CommentValue>\n          </CommentWrapper>\n        </Container>\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default InfiniteScrollListUI;\n","import axios from 'axios';\nimport { Component } from 'react';\nimport InfiniteScrollListUI from './InfiniteScrollList.presenter';\n\nclass InfiniteScrollList extends Component {\n  state = {\n    item: [],\n    itemPage: 1,\n  };\n\n  getItem = async () => {\n    const { data } = await axios.get(`https://jsonplaceholder.typicode.com/comments?_page=${this.state.itemPage}&_limit=10`);\n\n    this.setState(prev => ({\n      item: [...prev.item, ...data]\n    }));\n  };\n\n  infiniteScroll = () => {\n    if (window.innerHeight + window.scrollY === document.documentElement.scrollHeight) {\n      this.setState({\n        itemPage: this.state.itemPage + 1,\n      });\n    };\n  };\n\n  componentDidMount() {\n    this.getItem();\n    window.addEventListener('scroll', this.infiniteScroll);\n  };\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.itemPage !== prevState.itemPage) {\n      this.getItem();\n    };\n  };\n\n  render() {\n    return <InfiniteScrollListUI item={this.state.item} />\n  };\n};\n\nexport default InfiniteScrollList;\n","import { BrowserRouter, Route } from 'react-router-dom';\nimport InfiniteScrollList from '../components/infinite-scroll-list/InfiniteScrollList.container';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Route path='/' exact={true} component={InfiniteScrollList} />\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { css } from '@emotion/react';\n\nexport const reset = css`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  };\n  html, body, #root {\n    width: 100%;\n    height: 100%;\n  };\n`;\n","import Router from \"./routes\";\nimport { Global } from '@emotion/react';\nimport { reset } from './commons/GlobalStyles'\n\nfunction App() {\n  return (\n    <>\n      <Global styles={reset} />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}